public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public int kthsmallest(final List<Integer> A, int B) {
        if (A == null || A.size() == 0 || B > A.size()) {
            return -1;
        }
        
        Comparator<Integer> maxCompare = new Comparator<Integer>() {
            @Override
            public int compare(Integer first, Integer second) {
                if (first > second) {
                    return -1;
                } else if (first < second) {
                    return 1;
                } else {
                    return 0;
                }
            }
        };
        
        PriorityQueue<Integer> pq = new PriorityQueue<Integer>(B, maxCompare);
        for (int i = 0; i < B; i++) {
            pq.add(A.get(i));
        }
        for (int i = B; i < A.size(); i++) {
            if (A.get(i) < pq.peek()) {
                pq.poll();
                pq.add(A.get(i));
            }
        }
        return pq.poll();
    }
}
